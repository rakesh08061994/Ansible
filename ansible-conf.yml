---
- name: Check Pre-Configuration for ansible
  hosts: www.mh3.com
    #ignore_errors: yes
  vars_files:
    - credentials.yml

  tasks:
    - name: Setup local repository on {{ ansible_facts.distribution }} {{ ansible_facts.distribution_major_version }} machine
      blockinfile:
        path: /etc/yum.repos.d/redhat.repo
        block: |
          [AppStream]
          name = Online_AppStream
          gpgcheck = 0
          enabled = 1
          baseurl = http://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/

          [BaseOS]
          name = online_BaseOS
          gpgcheck = 0
          enabled = 1
          baseurl = http://mirror.stream.centos.org/9-stream/BaseOS/x86_64/os/
      when:
        - ansible_facts.distribution == 'RedHat'
        - ansible_facts.distribution_major_version == '9'

    # ------------------------------------------------------------------------------


    - name: Install EPEL repository package
      command: dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
      when:
        - ansible_facts['distribution'] == 'RedHat'
        - ansible_facts['distribution_major_version'] | int >= 9

    # ------------------------------------------------------------------------------

    - name: Install Python3 and python3-pip
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - python3
        - python3-pip
      when:
        - ansible_facts.discovered_interpreter_python is not defined
        - ansible_facts.distribution == 'RedHat'

    # ------------------------------------------------------------------------------

    - name: create user "{{ username }}"
      user:
        name: "{{ username }}"
        password: "{{ password | password_hash('sha512') }}"
        createhome: yes
        shell: /bin/bash
        update_password: always

    # ------------------------------------------------------------------------------

    - name: create file ansible_user at /etc/sudoers.d/user
      file:
        path: /etc/sudoers.d/user
        state: touch

    # ------------------------------------------------------------------------------

    - name: give sudoers access to user "{{ username }}"
      copy:
        content: "'{{ username }}' ALL=(ALL)   NOPASSWD:ALL"
        dest: /etc/sudoers.d/user
      when:
        - ansible_facts.distribution == 'RedHat'

    # ------------------------------------------------------------------------------

    - name: give sudoers access to user {{ username }} in {{ ansible_facts.distribution }}
      copy:
        content: "'{{ username }}' ALL=(ALL:ALL)   NOPASSWD:ALL"
        dest: /etc/sudoers.d/user
      when:
        - ansible_facts.distribution == 'Ubuntu'

    # ------------------------------------------------------------------------------

    - name: Configure LANGUAGE UTF-8 encoding in /etc/default/locale file
      blockinfile:
        path: /etc/default/locale
        block: |
          LANG=en_US.UTF-8
          LC_ALL=en_US.UTF-8
        marker: "LANG="
      when:
        - ansible_facts.distribution == 'Ubuntu'

    # ------------------------------------------------------------------------------

    - name: Install Python3 and python3-pip in "{{ ansible_facts.distribution }}"
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - python3-pip
        - python3
      when:
        - ansible_facts.discovered_interpreter_python is not defined
        - ansible_facts.distribution == 'Ubuntu'

    # ------------------------------------------------------------------------------

    - name: Install ansible, ansible-core, ansible-collection-community-general in "{{ ansible_facts.distribution }}"
      dnf:
        name: "{{ item }}"
        state: latest
      with_items:
        - ansible
        - ansible-core
        - ansible-collection-community-general
      when:
        - ansible_facts.distribution == 'RedHat'

     #------------------------------------------------------------------------------

    - name: Update Cache for 'Ubuntu'
      apt:
        update_cache: yes
      when: ansible_facts.distribution == 'Ubuntu'
      ignore_errors: yes

     
        #--------------------------------------------------------------------------

    - name: Add Ansible PPA repository
      ansible.builtin.apt_repository:
        repo: ppa:ansible/ansible
        update_cache: yes
      when: ansible_facts.distribution == 'Ubuntu'

      # ------------------------------------------------------------------------------

    - name: Install software-properties-common
      apt:
        pkg:
          - software-properties-common
          - ansible
      when: ansible_facts.distribution == 'Ubuntu'

    # ------------------------------------------------------------------------------

    - name: check verison
      shell:
        cmd: ansible --version
      register: output

    - name: Congratulation message when ansible is complete comfigured and setup
      debug:
        msg: output.stdout
